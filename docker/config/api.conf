[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.


[program:physics-api]
command = /var/apps/bin/gunicorn_start.sh                              ; Command to start app
user = apps                                                           ; User to run as
stdout_logfile = /var/log/supervisor/gunicorn.log   ; Where to write log messages
redirect_stderr = true                                                ; Save stderr in the same log
environment=HOME=/var/apps                       ; Set UTF-8 as default encoding

# [program:physics-migration]
# command = /var/apps/bin/init_db.sh                              ; Command to start app
# user = apps                                                           ; User to run as
# stdout_logfile = /var/log/supervisor/migration.log   ; Where to write log messages
# redirect_stderr = true                                                ; Save stderr in the same log
# environment=HOME=/var/apps                       ; Set UTF-8 as default encoding
